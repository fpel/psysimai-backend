# Exemplo de configuração Nginx para produção do PsySimAI

# Redireciona HTTP para HTTPS
server {
  listen 80;
  server_name 54.233.216.132;

  return 301 https://$host$request_uri;
}

# Servidor HTTPS com certificados SSL
server {
  listen 443 ssl;
  server_name 54.233.216.132;  # ou IP público

  ssl_certificate     /etc/ssl/psysimai/certificate.crt;
  ssl_certificate_key /etc/ssl/psysimai/private.key;
  ssl_trusted_certificate /etc/ssl/psysimai/ca_bundle.crt;

  root /var/www/psysimai;
  index index.html;

  location ^~ /.well-known/ {
     root /var/www;
     allow all;
  }

  # Frontend React
  location / {
    try_files $uri /index.html;
  }

  # Reverse proxy + CORS para o backend
  location /api/ {
    # 1) Preflight OPTIONS: responde já com 204 e cabeçalhos CORS
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin   *                                        always;
      add_header Access-Control-Allow-Methods  "GET, POST, PATCH, PUT, DELETE, OPTIONS" always;
      add_header Access-Control-Allow-Headers  "Authorization,Content-Type"            always;
      add_header Access-Control-Allow-Credentials "true"                               always;
      add_header Access-Control-Max-Age        1728000                                  always;
      return 204;
    }

    client_max_body_size 100M;

    # 2) Proxy para o seu Node.js
    proxy_pass http://localhost:3000/api/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade       $http_upgrade;
    proxy_set_header Connection    "upgrade";
    proxy_set_header Host          $host;
    proxy_cache_bypass             $http_upgrade;

    # 3) Cabeçalhos CORS nas respostas normais
    add_header Access-Control-Allow-Origin   *                                        always;
    add_header Access-Control-Allow-Methods  "GET, POST, PATCH, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers  "Authorization,Content-Type"            always;
    add_header Access-Control-Allow-Credentials "true"                               always;
  }
}
