// Estrutura completa do projeto PsySimAI (com rotas, controllers, testes, CI/CD, simulação de IA e seed corrigido)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Estimulo {
  id                String             @id @default(uuid())
  text              String
  criteriosAvaliacao String?
  feedback          String?
  order             Int
  skillCategory     SkillCategory      @relation(fields: [skillCategoryId], references: [id])
  skillCategoryId   String
  difficultyLevel   DifficultyLevel    @relation(fields: [difficultyLevelId], references: [id])
  difficultyLevelId String
  expectedResponses ExpectedResponse[]
  sessions          Session[]
  status            String   @default("active")
  habilitado        Boolean  @default(true)
  createdBy         String?
  updatedAt         DateTime? @updatedAt
  deletedBy         String?
  deletedAt         DateTime?
  userEstimulos     UserEstimulo[]
}

model UserEstimulo {
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  estimulo   Estimulo @relation(fields: [estimuloId], references: [id])
  estimuloId String
  createdAt  DateTime @default(now())

  @@id([userId, estimuloId])
}

model User {
  id           String         @id @default(uuid())
  name         String
  email        String         @unique
  isAdmin      Boolean        @default(false)
  ativo        Boolean        @default(true)
  sessions     Session[]
  userEstimulos UserEstimulo[]
}

model ExpectedResponse {
  id          String   @id @default(uuid())
  estimulo    Estimulo @relation(fields: [estimuloId], references: [id])
  estimuloId  String
  text        String
  notes       String?
}

model SkillCategory {
  id          String   @id @default(uuid())
  title       String?
  description String
  promptIntro String?   // Texto introdutorio para o prompt do ChatGPT
  promptFormat String?  // Instrucaoo de formato de resposta (ex: JSON)
  promptTemperature Int? // Temperature para o modelo (0-10, será dividido por 10 na API)
  status      String   @default("active")
  deletedBy   String?
  deletedAt   DateTime?
  updatedAt   DateTime? @updatedAt
  estimulos   Estimulo[]
}

model DifficultyLevel {
  id          String          @id @default(uuid())
  name        String
  order       Int
  estimulos   Estimulo[]
}

model Session {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  estimulo    Estimulo  @relation(fields: [estimuloId], references: [id])
  estimuloId  String
  status      String
  startedAt   DateTime  @default(now())
  endedAt     DateTime?
  messages    Message[]
}

model Message {
  id           String   @id @default(uuid())
  session      Session  @relation(fields: [sessionId], references: [id])
  sessionId    String
  sender       String
  content      String
  transcription String?
  timestamp    DateTime @default(now())
  isValid      Boolean?
  feedback     String?
  score        Int?     @default(0)
}

